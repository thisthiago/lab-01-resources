{"paragraphs":[{"text":"%md\r\n# O que é a DataFrame API do PySpark?\r\nA DataFrame API é uma interface de alto nível do PySpark que permite trabalhar com dados estruturados em forma de tabelas (como no SQL ou Pandas).\r\n\r\nUm DataFrame é basicamente uma coleção distribuída de dados organizados em colunas nomeadas, com tipos definidos (schema), que pode ser consultada e manipulada de forma eficiente.\r\n\r\n### Por que foi criada?\r\nAntes da DataFrame API, o Spark usava apenas os RDDs (Resilient Distributed Datasets). Eles são poderosos, mas:\r\n- Exigem muito código para tarefas simples.\r\n- Não têm conhecimento de schema (tipos das colunas), o que dificulta otimizações.\r\n- São mais difíceis de otimizar automaticamente.\r\n\r\n### A DataFrame API foi criada para:\r\n\r\n1. Simplificar o código (menos boilerplate).\r\n2. Aumentar a performance com o Catalyst Optimizer (que reorganiza e otimiza o plano de execução).\r\n3. Permitir uso de SQL diretamente sobre os dados.\r\n4. Facilitar integração com formatos como JSON, Parquet, Hive, etc.\r\n\r\nA DataFrame API ainda usa RDDs para poder funcionar. Mas ela adiciona uma camada de abstração e otimização por cima dos RDDs, quando você usamos a API de DataFrame (ex: df.select().filter()), o Spark monta um plano lógico de execução.\r\nEsse plano é otimizado pelo Catalyst Optimizer, e por fim, o Spark gera um plano físico que será executado como uma sequência de operações em RDDs.\r\n\r\n```\r\nVocê -> DataFrame API -> Catalyst Optimizer -> RDD -> Execução distribuída\r\n```","user":"anonymous","dateUpdated":"2025-04-15T16:19:47+0000","progress":0,"config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744724898203_755666248","id":"paragraph_1744724898203_755666248","dateCreated":"2025-04-15T13:48:18+0000","dateStarted":"2025-04-15T16:19:47+0000","dateFinished":"2025-04-15T16:19:47+0000","status":"FINISHED","focus":true,"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>O que é a DataFrame API do PySpark?</h1>\n<p>A DataFrame API é uma interface de alto nível do PySpark que permite trabalhar com dados estruturados em forma de tabelas (como no SQL ou Pandas).</p>\n<p>Um DataFrame é basicamente uma coleção distribuída de dados organizados em colunas nomeadas, com tipos definidos (schema), que pode ser consultada e manipulada de forma eficiente.</p>\n<h3>Por que foi criada?</h3>\n<p>Antes da DataFrame API, o Spark usava apenas os RDDs (Resilient Distributed Datasets). Eles são poderosos, mas:</p>\n<ul>\n<li>Exigem muito código para tarefas simples.</li>\n<li>Não têm conhecimento de schema (tipos das colunas), o que dificulta otimizações.</li>\n<li>São mais difíceis de otimizar automaticamente.</li>\n</ul>\n<h3>A DataFrame API foi criada para:</h3>\n<ol>\n<li>Simplificar o código (menos boilerplate).</li>\n<li>Aumentar a performance com o Catalyst Optimizer (que reorganiza e otimiza o plano de execução).</li>\n<li>Permitir uso de SQL diretamente sobre os dados.</li>\n<li>Facilitar integração com formatos como JSON, Parquet, Hive, etc.</li>\n</ol>\n<p>A DataFrame API ainda usa RDDs para poder funcionar. Mas ela adiciona uma camada de abstração e otimização por cima dos RDDs, quando você usamos a API de DataFrame (ex: df.select().filter()), o Spark monta um plano lógico de execução.<br />\nEsse plano é otimizado pelo Catalyst Optimizer, e por fim, o Spark gera um plano físico que será executado como uma sequência de operações em RDDs.</p>\n<pre><code>Você -&gt; DataFrame API -&gt; Catalyst Optimizer -&gt; RDD -&gt; Execução distribuída\n</code></pre>\n\n</div>"}]}},{"title":"Criando um DataFrame a partir de um dicionário","text":"%pyspark\ndados = [\n    {\"nome\": \"Amanda\", \"idade\": 30},\n    {\"nome\": \"Shirlley\", \"idade\": 25},\n    {\"nome\": \"Antôonio\", \"idade\": 27}\n]\n\ndf_dict = spark.createDataFrame(dados)\ndf_dict.show()","user":"anonymous","dateUpdated":"2025-04-15T14:11:16+0000","progress":0,"config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"colWidth":12,"fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=55"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=55"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=55"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=55"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=56"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=56"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=56"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=56"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=57"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=57"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=57"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=57"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744726113341_1535326922","id":"paragraph_1744726113341_1535326922","dateCreated":"2025-04-15T14:08:33+0000","dateStarted":"2025-04-15T14:11:16+0000","dateFinished":"2025-04-15T14:11:20+0000","status":"FINISHED"},{"title":"Criando um DataFrame a partir de uma lista","text":"%pyspark\ndados = [\n    (\"João\", 30),\n    (\"Carlos\", 25),\n    (\"Miguel\", 27)\n]\n\ncolunas = [\"nome\", \"idade\"]\ndf_lista = spark.createDataFrame(dados, colunas)\ndf_lista.show()\n","user":"anonymous","dateUpdated":"2025-04-15T14:11:24+0000","progress":0,"config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=52"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=52"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=52"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=52"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=53"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=53"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=53"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=53"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=54"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=54"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=54"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=54"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744726223348_1893177600","id":"paragraph_1744726223348_1893177600","dateCreated":"2025-04-15T14:10:23+0000","dateStarted":"2025-04-15T14:11:00+0000","dateFinished":"2025-04-15T14:11:05+0000","status":"FINISHED"},{"title":"Data types","text":"%md\n| Tipo PySpark             | Tipo Python / SQL equivalente       | Descrição                                 |\n|--------------------------|-------------------------------------|-------------------------------------------|\n| `StringType()`           | `str` / `VARCHAR`                   | Texto                                     |\n| `IntegerType()`          | `int` / `INT`                       | Número inteiro de 32 bits                 |\n| `LongType()`             | `int` / `BIGINT`                    | Número inteiro de 64 bits                 |\n| `FloatType()`            | `float` / `FLOAT`                   | Número decimal (precisão simples)         |\n| `DoubleType()`           | `float` / `DOUBLE`                  | Número decimal (precisão dupla)           |\n| `BooleanType()`          | `bool` / `BOOLEAN`                  | Verdadeiro ou falso                       |\n| `DateType()`             | `datetime.date` / `DATE`            | Data (YYYY-MM-DD)                         |\n| `TimestampType()`        | `datetime.datetime` / `TIMESTAMP`  | Data e hora                               |\n| `DecimalType(precision, scale)` | `Decimal` / `DECIMAL(p, s)`       | Decimal com precisão definida             |\n| `BinaryType()`           | `bytes` / `BINARY`                  | Dados binários                            |\n| `ArrayType(elementType)` | `list` / `ARRAY`                    | Lista de valores do mesmo tipo            |\n| `MapType(keyType, valueType)` | `dict` / `MAP`                    | Mapa (dicionário) de chave e valor        |\n| `StructType([...])`      | `struct` / `STRUCT`                 | Estrutura com múltiplos campos            |\n","user":"anonymous","dateUpdated":"2025-04-15T16:20:34+0000","progress":0,"config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744726301406_2044378445","id":"paragraph_1744726301406_2044378445","dateCreated":"2025-04-15T14:11:41+0000","dateStarted":"2025-04-15T16:20:34+0000","dateFinished":"2025-04-15T16:20:34+0000","status":"FINISHED","focus":true,"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<table>\n<thead>\n<tr><th>Tipo PySpark</th><th>Tipo Python / SQL equivalente</th><th>Descrição</th></tr>\n</thead>\n<tbody>\n<tr><td><code>StringType()</code></td><td><code>str</code> / <code>VARCHAR</code></td><td>Texto</td></tr>\n<tr><td><code>IntegerType()</code></td><td><code>int</code> / <code>INT</code></td><td>Número inteiro de 32 bits</td></tr>\n<tr><td><code>LongType()</code></td><td><code>int</code> / <code>BIGINT</code></td><td>Número inteiro de 64 bits</td></tr>\n<tr><td><code>FloatType()</code></td><td><code>float</code> / <code>FLOAT</code></td><td>Número decimal (precisão simples)</td></tr>\n<tr><td><code>DoubleType()</code></td><td><code>float</code> / <code>DOUBLE</code></td><td>Número decimal (precisão dupla)</td></tr>\n<tr><td><code>BooleanType()</code></td><td><code>bool</code> / <code>BOOLEAN</code></td><td>Verdadeiro ou falso</td></tr>\n<tr><td><code>DateType()</code></td><td><code>datetime.date</code> / <code>DATE</code></td><td>Data (YYYY-MM-DD)</td></tr>\n<tr><td><code>TimestampType()</code></td><td><code>datetime.datetime</code> / <code>TIMESTAMP</code></td><td>Data e hora</td></tr>\n<tr><td><code>DecimalType(precision, scale)</code></td><td><code>Decimal</code> / <code>DECIMAL(p, s)</code></td><td>Decimal com precisão definida</td></tr>\n<tr><td><code>BinaryType()</code></td><td><code>bytes</code> / <code>BINARY</code></td><td>Dados binários</td></tr>\n<tr><td><code>ArrayType(elementType)</code></td><td><code>list</code> / <code>ARRAY</code></td><td>Lista de valores do mesmo tipo</td></tr>\n<tr><td><code>MapType(keyType, valueType)</code></td><td><code>dict</code> / <code>MAP</code></td><td>Mapa (dicionário) de chave e valor</td></tr>\n<tr><td><code>StructType([...])</code></td><td><code>struct</code> / <code>STRUCT</code></td><td>Estrutura com múltiplos campos</td></tr>\n</tbody>\n</table>\n\n</div>"}]}},{"title":"Especificar schema com tipos","text":"%pyspark\nfrom pyspark.sql.types import StructType, StructField, StringType, IntegerType\n\nschema = StructType([\n    StructField(\"nome\", StringType(), True),\n    StructField(\"idade\", IntegerType(), True)\n])\n\ndf_schema = spark.createDataFrame(dados, schema)\ndf_schema.printSchema()","user":"anonymous","dateUpdated":"2025-04-15T14:12:19+0000","progress":0,"config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744726260256_304353337","id":"paragraph_1744726260256_304353337","dateCreated":"2025-04-15T14:11:00+0000","dateStarted":"2025-04-15T14:12:19+0000","dateFinished":"2025-04-15T14:12:23+0000","status":"FINISHED"},{"title":"Caregando dados de arquivos","text":"%pyspark\n# Definir o schema (Opcional)\nsales_schema = StructType([\n    StructField(\"Sales_Person\", StringType(), True),\n    StructField(\"Country\", StringType(), True),\n    StructField(\"Product\", StringType(), True),\n    StructField(\"Date\", StringType(), True),\n    StructField(\"Amount\", StringType(), True),\n    StructField(\"Boxes_Shipped\", IntegerType(), True)\n])\n\nsales_df = spark.read.csv(\n    \"s3a://bucket-teste/csv/*\",\n    header=True,\n    schema=sales_schema,\n    enforceSchema=True\n)","user":"anonymous","dateUpdated":"2025-04-15T14:20:50+0000","progress":0,"config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744726528730_44031672","id":"paragraph_1744726528730_44031672","dateCreated":"2025-04-15T14:15:28+0000","dateStarted":"2025-04-15T14:20:50+0000","dateFinished":"2025-04-15T14:20:54+0000","status":"FINISHED"},{"title":"Exploração dos Dados","text":"%pyspark\nsales_df.printSchema()\n\nsales_df.describe().show()\n\nsales_df.show(5, truncate=False)","user":"anonymous","dateUpdated":"2025-04-15T14:21:11+0000","progress":0,"config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=61"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=61"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=61"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=61"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=62"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=62"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=62"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=62"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=63"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=63"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=63"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=63"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744726339436_1983759941","id":"paragraph_1744726339436_1983759941","dateCreated":"2025-04-15T14:12:19+0000","dateStarted":"2025-04-15T14:21:11+0000","dateFinished":"2025-04-15T14:21:15+0000","status":"FINISHED"},{"title":"Seleção e Manipulação de Colunas","text":"%pyspark\nfrom pyspark.sql.functions import *\n\nselected_df = sales_df.select(\"Sales_Person\", \"Country\", \"Amount\")\nselected_df.show(5)\n\n\nselected_expr = sales_df.select(\n    col(\"Sales_Person\"), \n    upper(col(\"Country\")).alias(\"Country_Upper\"),\n    (col(\"Amount\") * 1.1).alias(\"Amount_With_Tax\")\n)\nselected_expr.show(5)\n\ncolumns_to_select = [\"Product\", \"Date\", \"Boxes_Shipped\"]\nproduct_info_df = sales_df.select(*columns_to_select)\nproduct_info_df.show(5)","user":"anonymous","dateUpdated":"2025-04-15T14:27:56+0000","progress":0,"config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=69"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=69"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=69"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=69"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=70"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=70"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=70"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=70"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=71"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=71"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=71"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=71"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744726740273_435568218","id":"paragraph_1744726740273_435568218","dateCreated":"2025-04-15T14:19:00+0000","dateStarted":"2025-04-15T14:27:56+0000","dateFinished":"2025-04-15T14:28:00+0000","status":"FINISHED"},{"text":"%pyspark\nsales_df = sales_df.withColumn(\"Amount\", regexp_replace(\"Amount\", \"[$,]\", \"\").cast(\"float\"))\nsales_df = sales_df.withColumn(\"Boxes_Shipped\", col(\"Boxes_Shipped\").cast(\"int\"))\n\nsales_df.printSchema()\n\nsales_df.select(\"Amount\", \"Boxes_Shipped\").show(5)","user":"anonymous","dateUpdated":"2025-04-15T14:27:24+0000","progress":0,"config":{"colWidth":12,"fontSize":9,"results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true}},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=68"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=68"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=68"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=68"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744727040202_2042944028","id":"paragraph_1744727040202_2042944028","dateCreated":"2025-04-15T14:24:00+0000","dateStarted":"2025-04-15T14:27:24+0000","dateFinished":"2025-04-15T14:27:28+0000","status":"FINISHED"},{"title":"Adicionando/Modificando colunas","text":"%pyspark\n# Criar uma nova coluna calculada\nwith_calculations = sales_df.withColumn(\n    \"Price_Per_Box\", \n    round(col(\"Amount\") / col(\"Boxes_Shipped\"), 2)\n)\nwith_calculations.select(\"Product\", \"Amount\", \"Boxes_Shipped\", \"Price_Per_Box\").show(5)\n\n# Modificar uma coluna existente (convertendo para uppercase)\nmodified_df = sales_df.withColumn(\n    \"Product\", \n    upper(col(\"Product\"))\n)\nmodified_df.select(\"Product\").show(5)\n\n# Condicionais com when() e otherwise()\ncategorized_df = sales_df.withColumn(\n    \"Sale_Size\",\n    when(col(\"Amount\") < 1000, \"Small\")\n     .when(col(\"Amount\") < 5000, \"Medium\")\n     .otherwise(\"Large\")\n)\ncategorized_df.select(\"Amount\", \"Sale_Size\").show(10)","user":"anonymous","dateUpdated":"2025-04-15T14:29:02+0000","progress":0,"config":{"colWidth":12,"fontSize":9,"title":true,"results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true}},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=72"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=72"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=72"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=72"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=73"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=73"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=73"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=73"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=74"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=74"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=74"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=74"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744727222474_1829659562","id":"paragraph_1744727222474_1829659562","dateCreated":"2025-04-15T14:27:02+0000","dateStarted":"2025-04-15T14:29:02+0000","dateFinished":"2025-04-15T14:29:06+0000","status":"FINISHED"},{"title":"Removendo colunas","text":"%pyspark\n# Remover uma única coluna\nwithout_amount = sales_df.drop(\"Amount\")\nwithout_amount.show(5)\n\n# Remover múltiplas colunas\nminimal_df = sales_df.drop(\"Date\", \"Boxes_Shipped\")\nminimal_df.show(5)\n\n# Remover após criar nova coluna (padrão comum)\nprocessed_df = sales_df.withColumn(\n    \"Year\", \n    year(col(\"Date\"))\n).drop(\"Date\")\n\nprocessed_df.show(5)","user":"anonymous","dateUpdated":"2025-04-15T14:29:30+0000","progress":0,"config":{"colWidth":12,"fontSize":9,"title":true,"results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true}},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=75"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=75"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=75"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=75"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=76"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=76"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=76"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=76"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=77"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=77"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=77"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=77"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744727342974_319093433","id":"paragraph_1744727342974_319093433","dateCreated":"2025-04-15T14:29:02+0000","dateStarted":"2025-04-15T14:29:30+0000","dateFinished":"2025-04-15T14:29:34+0000","status":"FINISHED"},{"title":"Renomear colunas","text":"%pyspark\n# Renomear uma coluna\nrenamed_df = sales_df.withColumnRenamed(\"Sales_Person\", \"Seller\")\nrenamed_df.show(5)\n\n# Renomear múltiplas colunas\nmulti_renamed = sales_df \\\n    .withColumnRenamed(\"Sales_Person\", \"Seller\") \\\n    .withColumnRenamed(\"Boxes_Shipped\", \"Units\")\nmulti_renamed.show(5)\n\n# Usando select + alias para renomear\nrenamed_select = sales_df.select(\n    col(\"Sales_Person\").alias(\"Employee\"),\n    col(\"Product\").alias(\"Chocolate_Type\"),\n    col(\"Amount\").alias(\"Revenue\")\n)\nrenamed_select.show(5)","user":"anonymous","dateUpdated":"2025-04-15T14:30:24+0000","progress":0,"config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=78"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=78"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=78"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=78"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=79"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=79"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=79"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=79"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=80"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=80"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=80"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=80"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744727370366_108947307","id":"paragraph_1744727370366_108947307","dateCreated":"2025-04-15T14:29:30+0000","dateStarted":"2025-04-15T14:30:24+0000","dateFinished":"2025-04-15T14:30:29+0000","status":"FINISHED"},{"title":"Conversão de tipos","text":"%pyspark\n# Converter tipos de colunas\nconverted_df = sales_df.withColumn(\n    \"Amount\", \n    col(\"Amount\").cast(\"double\")\n).withColumn(\n    \"Date\", \n    to_date(col(\"Date\"), \"dd-MMM-yy\")\n)\n\nconverted_df.printSchema()\n\n# Converter durante seleção\ncast_in_select = sales_df.select(\n    col(\"Sales_Person\"),\n    col(\"Amount\").cast(\"integer\").alias(\"Amount_Int\")\n)\ncast_in_select.printSchema()","user":"anonymous","dateUpdated":"2025-04-15T14:31:33+0000","progress":0,"config":{"colWidth":12,"fontSize":9,"title":true,"results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true}},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744727424573_1695616539","id":"paragraph_1744727424573_1695616539","dateCreated":"2025-04-15T14:30:24+0000","dateStarted":"2025-04-15T14:31:33+0000","dateFinished":"2025-04-15T14:31:37+0000","status":"FINISHED"},{"title":"Combinação de Operações","text":"%pyspark\n# Exemplo combinado: selecionar, adicionar e remover colunas\nfinal_df = sales_df.select(\n    \"Sales_Person\",\n    \"Product\",\n    \"Amount\"\n).withColumn(\n    \"Discounted_Amount\",\n    col(\"Amount\") * 0.9  # Aplicar 10% de desconto\n).withColumn(\n    \"Product_Category\",\n    when(col(\"Product\").contains(\"Dark\"), \"Dark Chocolate\")\n     .when(col(\"Product\").contains(\"Milk\"), \"Milk Chocolate\")\n     .otherwise(\"Other\")\n).drop(\"Amount\")  # Remover a coluna original\n\nfinal_df.show(10)","user":"anonymous","dateUpdated":"2025-04-15T14:32:57+0000","progress":0,"config":{"colWidth":12,"fontSize":9,"title":true,"results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true}},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=81"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=81"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=81"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=81"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744727493579_158367488","id":"paragraph_1744727493579_158367488","dateCreated":"2025-04-15T14:31:33+0000","dateStarted":"2025-04-15T14:32:57+0000","dateFinished":"2025-04-15T14:33:01+0000","status":"FINISHED"},{"title":"Filtros básicos com .filter()/.where()","text":"%pyspark\n# Filtrar vendas acima de $10,000 (ambas formas são equivalentes)\nhigh_sales = sales_df.filter(col(\"Amount\") > 10000)\nhigh_sales = sales_df.where(\"Amount > 10000\")  # Forma alternativa\nhigh_sales.show(5)\n\n# Filtrar por valor exato\nuk_sales = sales_df.filter(col(\"Country\") == \"UK\")\nuk_sales.show(5)\n\n# Filtrar por valor diferente\nnon_usa_sales = sales_df.filter(col(\"Country\") != \"USA\")\nnon_usa_sales.show(5)","user":"anonymous","dateUpdated":"2025-04-15T14:35:13+0000","progress":0,"config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=82"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=82"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=82"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=82"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=83"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=83"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=83"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=83"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=84"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=84"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=84"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=84"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744727577947_1895096724","id":"paragraph_1744727577947_1895096724","dateCreated":"2025-04-15T14:32:57+0000","dateStarted":"2025-04-15T14:35:13+0000","dateFinished":"2025-04-15T14:35:16+0000","status":"FINISHED"},{"text":"%md\n| Operador | Símbolo | Exemplo PySpark                              | Significado                                  |\n|----------|---------|----------------------------------------------|----------------------------------------------|\n| AND      | `&`     | `(col(\"A\") == 1) & (col(\"B\") > 5)`            | Verdadeiro se **ambas** condições forem verdadeiras |\n| OR       | `|`     | `(col(\"A\") == 1) \\| (col(\"B\") > 5)`           | Verdadeiro se **pelo menos uma** for verdadeira    |\n| NOT      | `~`     | `~(col(\"A\") == 1)`                            | **Inverte** o valor lógico (NOT lógico)       |\n| LIKE     | `.like()`| `col(\"Produto\").like(\"%Dark%\")`             | **Compara padrões** (como no SQL)             |\n| CONTAINS | `.contains()`| `col(\"Produto\").contains(\"Dark\")`       | Verdadeiro se a string **contém** um valor    |\n| IS NULL  | `.isNull()`| `col(\"Valor\").isNull()`                   | Verifica se o valor é **nulo**                |\n| IS NOT NULL | `.isNotNull()`| `col(\"Valor\").isNotNull()`         | Verifica se o valor **não é nulo**            |\n","user":"anonymous","dateUpdated":"2025-04-15T16:20:04+0000","progress":0,"config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744727713186_1340085455","id":"paragraph_1744727713186_1340085455","dateCreated":"2025-04-15T14:35:13+0000","dateStarted":"2025-04-15T16:20:04+0000","dateFinished":"2025-04-15T16:20:04+0000","status":"FINISHED","focus":true,"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<table>\n<thead>\n<tr><th>Operador</th><th>Símbolo</th><th>Exemplo PySpark</th><th>Significado</th></tr>\n</thead>\n<tbody>\n<tr><td>AND</td><td><code>&amp;</code></td><td><code>(col(&quot;A&quot;) == 1) &amp; (col(&quot;B&quot;) &gt; 5)</code></td><td>Verdadeiro se <strong>ambas</strong> condições forem verdadeiras</td></tr>\n<tr><td>OR</td><td><code>|</code></td><td><code>(col(&quot;A&quot;) == 1) \\| (col(&quot;B&quot;) &gt; 5)</code></td><td>Verdadeiro se <strong>pelo menos uma</strong> for verdadeira</td></tr>\n<tr><td>NOT</td><td><code>~</code></td><td><code>~(col(&quot;A&quot;) == 1)</code></td><td><strong>Inverte</strong> o valor lógico (NOT lógico)</td></tr>\n<tr><td>LIKE</td><td><code>.like()</code></td><td><code>col(&quot;Produto&quot;).like(&quot;%Dark%&quot;)</code></td><td><strong>Compara padrões</strong> (como no SQL)</td></tr>\n<tr><td>CONTAINS</td><td><code>.contains()</code></td><td><code>col(&quot;Produto&quot;).contains(&quot;Dark&quot;)</code></td><td>Verdadeiro se a string <strong>contém</strong> um valor</td></tr>\n<tr><td>IS NULL</td><td><code>.isNull()</code></td><td><code>col(&quot;Valor&quot;).isNull()</code></td><td>Verifica se o valor é <strong>nulo</strong></td></tr>\n<tr><td>IS NOT NULL</td><td><code>.isNotNull()</code></td><td><code>col(&quot;Valor&quot;).isNotNull()</code></td><td>Verifica se o valor <strong>não é nulo</strong></td></tr>\n</tbody>\n</table>\n\n</div>"}]}},{"title":"Operadores booleanos (&, |, ~)","text":"%pyspark\n# AND (&) - Vendas no UK acima de $5,000\nuk_high_sales = sales_df.filter(\n    (col(\"Country\") == \"UK\") & \n    (col(\"Amount\") > 5000)\n)\nuk_high_sales.show(5)\n\n\n# OR (|) - Vendas no UK ou acima de $10,000\nuk_or_high = sales_df.filter(\n    (col(\"Country\") == \"UK\") | \n    (col(\"Amount\") > 10000)\n)\nuk_or_high.show(5)\n\n# NOT (~) - Vendas que NÃO são do UK e NÃO são de chocolate amargo\nnot_uk_not_dark = sales_df.filter(\n    ~(col(\"Country\") == \"UK\") & \n    ~col(\"Product\").contains(\"Dark\")\n)\nnot_uk_not_dark.show(5)\n\n","user":"anonymous","dateUpdated":"2025-04-15T14:43:17+0000","progress":0,"config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"colWidth":12,"fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=89"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=89"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=89"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=89"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=90"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=90"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=90"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=90"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=91"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=91"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=91"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=91"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744727869065_195001750","id":"paragraph_1744727869065_195001750","dateCreated":"2025-04-15T14:37:49+0000","dateStarted":"2025-04-15T14:43:17+0000","dateFinished":"2025-04-15T14:43:21+0000","status":"FINISHED"},{"title":"Funções especiais para filtros","text":"%md\n- .isin() - Filtrar por valores em uma lista\n- .like() - Filtro com padrão simples (SQL LIKE)\n- .rlike() - Filtro com expressão regular\n- .between() - Filtrar por intervalo","user":"anonymous","dateUpdated":"2025-04-15T16:20:09+0000","progress":0,"config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"fontSize":9,"editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744727904609_1489119619","id":"paragraph_1744727904609_1489119619","dateCreated":"2025-04-15T14:38:24+0000","dateStarted":"2025-04-15T16:20:09+0000","dateFinished":"2025-04-15T16:20:09+0000","status":"FINISHED","focus":true,"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n<li>.isin() - Filtrar por valores em uma lista</li>\n<li>.like() - Filtro com padrão simples (SQL LIKE)</li>\n<li>.rlike() - Filtro com expressão regular</li>\n<li>.between() - Filtrar por intervalo</li>\n</ul>\n\n</div>"}]}},{"text":"%pyspark\n# Vendas em países específicos\nselected_countries = [\"UK\", \"USA\", \"Australia\"]\ncountry_filter = sales_df.filter(col(\"Country\").isin(selected_countries))\ncountry_filter.show(5)","user":"anonymous","dateUpdated":"2025-04-15T14:46:09+0000","progress":0,"config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"colWidth":12,"fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=106"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=106"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=106"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=106"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744727961082_935939626","id":"paragraph_1744727961082_935939626","dateCreated":"2025-04-15T14:39:21+0000","dateStarted":"2025-04-15T14:46:09+0000","dateFinished":"2025-04-15T14:46:13+0000","status":"FINISHED"},{"text":"%pyspark\n# Produtos que começam com \"Dark\"\ndark_chocolates = sales_df.filter(col(\"Product\").like(\"Dark%\"))\ndark_chocolates.select(\"Product\").distinct().show()\n\n# Produtos que contêm \"Chip\"\nchip_products = sales_df.filter(col(\"Product\").like(\"%Chip%\"))\nchip_products.select(\"Product\").distinct().show()\n\n# Produtos que terminam com \"Bars\"\nbars = sales_df.filter(col(\"Product\").like(\"%Bars\"))\nbars.select(\"Product\").distinct().show()","user":"anonymous","dateUpdated":"2025-04-15T14:44:14+0000","progress":0,"config":{"colWidth":12,"fontSize":9,"results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true}},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=94"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=94"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=94"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=94"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=95"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=95"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=95"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=95"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=96"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=96"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=96"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=96"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=97"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=97"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=97"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=97"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=98"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=98"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=98"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=98"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744728006968_851835983","id":"paragraph_1744728006968_851835983","dateCreated":"2025-04-15T14:40:06+0000","dateStarted":"2025-04-15T14:44:14+0000","dateFinished":"2025-04-15T14:44:19+0000","status":"FINISHED"},{"text":"%pyspark\n# Produtos com números no nome (ex: 50%, 85%, etc)\nproducts_with_numbers = sales_df.filter(col(\"Product\").rlike(\"\\d+%\"))\nproducts_with_numbers.select(\"Product\").distinct().show()\n\n# Produtos com \"Dark\" ou \"Milk\" no nome\ndark_or_milk = sales_df.filter(col(\"Product\").rlike(\"Dark|Milk\"))\ndark_or_milk.select(\"Product\").distinct().show()\n\n# Vendedores com sobrenome começando com 'M'\nm_surnames = sales_df.filter(col(\"Sales_Person\").rlike(\"M\\w+$\"))\nm_surnames.select(\"Sales_Person\").distinct().show()","user":"anonymous","dateUpdated":"2025-04-15T14:45:06+0000","progress":0,"config":{"colWidth":12,"fontSize":9,"results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true}},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=99"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=99"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=99"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=99"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=100"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=100"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=100"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=100"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=101"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=101"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=101"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=101"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=102"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=102"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=102"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=102"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=103"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=103"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=103"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=103"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=104"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=104"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=104"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=104"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744728292304_917281418","id":"paragraph_1744728292304_917281418","dateCreated":"2025-04-15T14:44:52+0000","dateStarted":"2025-04-15T14:45:06+0000","dateFinished":"2025-04-15T14:45:10+0000","status":"FINISHED"},{"text":"%pyspark\n# Vendas entre $1,000 e $5,000\nmid_range_sales = sales_df.filter(col(\"Amount\").between(1000, 5000))\nmid_range_sales.show(5)","user":"anonymous","dateUpdated":"2025-04-15T14:45:21+0000","progress":0,"config":{"colWidth":12,"fontSize":9,"results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true}},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=105"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=105"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=105"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=105"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744728308364_1278664891","id":"paragraph_1744728308364_1278664891","dateCreated":"2025-04-15T14:45:08+0000","dateStarted":"2025-04-15T14:45:21+0000","dateFinished":"2025-04-15T14:45:24+0000","status":"FINISHED"},{"title":"Filtros com valores nulos","text":"%pyspark\nfrom pyspark.sql.functions import isnull, isnan\n\n# Filtrar linhas onde Amount é nulo\nnull_amount = sales_df.filter(col(\"Amount\").isNull())\nnull_amount.show()\n\n# Filtrar linhas onde Amount NÃO é nulo\nnon_null_amount = sales_df.filter(col(\"Amount\").isNotNull())\nnon_null_amount.show()\n\n# Filtrar linhas onde Product é nulo OU Amount é nulo\nany_nulls = sales_df.filter(\n    col(\"Product\").isNull() | \n    col(\"Amount\").isNull())\nany_nulls.show()","user":"anonymous","dateUpdated":"2025-04-15T15:31:37+0000","progress":0,"config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false,"completionSupport":true,"completionKey":"TAB"},"colWidth":12,"fontSize":9,"editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=107"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=107"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=107"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=107"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=108"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=108"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=108"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=108"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=109"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=109"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=109"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=109"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744727988580_978320102","id":"paragraph_1744727988580_978320102","dateCreated":"2025-04-15T14:39:48+0000","dateStarted":"2025-04-15T15:31:37+0000","dateFinished":"2025-04-15T15:31:40+0000","status":"FINISHED"},{"title":"Removendo linhas duplicadas","text":"%pyspark\n# Obter valores distintos de uma coluna\ndistinct_countries = sales_df.select(\"Country\").distinct()\ndistinct_countries.show()\n\n# Obter combinações distintas de múltiplas colunas\ndistinct_seller_product = sales_df.select(\"Sales_Person\", \"Product\").distinct()\ndistinct_seller_product.show(10)","user":"anonymous","dateUpdated":"2025-04-15T15:32:08+0000","progress":0,"config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=110"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=110"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=110"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=110"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=111"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=111"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=111"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=111"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=112"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=112"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=112"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=112"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=113"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=113"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=113"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=113"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744731110576_1177471536","id":"paragraph_1744731110576_1177471536","dateCreated":"2025-04-15T15:31:50+0000","dateStarted":"2025-04-15T15:32:08+0000","dateFinished":"2025-04-15T15:32:12+0000","status":"FINISHED"},{"text":"%pyspark\n# dropDuplicates() - equivalente a distinct() mas com mais opções\n# Remover duplicatas considerando todas as colunas\nno_duplicates = sales_df.dropDuplicates()\nno_duplicates.count()\n\n# Remover duplicatas baseado em colunas específicas\nno_dup_by_seller = sales_df.dropDuplicates([\"Sales_Person\", \"Country\"])\nno_dup_by_seller.show(10)","user":"anonymous","dateUpdated":"2025-04-15T15:32:21+0000","progress":0,"config":{"colWidth":12,"fontSize":9,"results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true}},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=114"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=114"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=114"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=114"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=115"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=115"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=115"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=115"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=116"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=116"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=116"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=116"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=117"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=117"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=117"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=117"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=118"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=118"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=118"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=118"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744728254576_692891832","id":"paragraph_1744728254576_692891832","dateCreated":"2025-04-15T14:44:14+0000","dateStarted":"2025-04-15T15:32:21+0000","dateFinished":"2025-04-15T15:32:26+0000","status":"FINISHED"},{"text":"%md\n- distinct() opera em todas as colunas selecionadas\n- dropDuplicates() pode especificar subset de colunas","user":"anonymous","dateUpdated":"2025-04-15T16:20:17+0000","progress":0,"config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744731151895_946789561","id":"paragraph_1744731151895_946789561","dateCreated":"2025-04-15T15:32:31+0000","dateStarted":"2025-04-15T16:20:17+0000","dateFinished":"2025-04-15T16:20:17+0000","status":"FINISHED","focus":true,"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<ul>\n<li>distinct() opera em todas as colunas selecionadas</li>\n<li>dropDuplicates() pode especificar subset de colunas</li>\n</ul>\n\n</div>"}]}},{"title":"Ordenando linhas","text":"%pyspark\n# Ordenação simples por uma coluna\nordered_by_amount = sales_df.orderBy(\"Amount\")\nordered_by_amount.select(\"Sales_Person\", \"Amount\").show(10)\n\n# Ordenação descendente\nhigh_to_low = sales_df.orderBy(col(\"Amount\").desc())\nhigh_to_low.select(\"Sales_Person\", \"Amount\").show(10)\n\n# Ordenação por múltiplas colunas\nordered_multiple = sales_df.orderBy(\n    col(\"Country\").asc(), \n    col(\"Amount\").desc()\n)\nordered_multiple.select(\"Country\", \"Sales_Person\", \"Amount\").show(15)","user":"anonymous","dateUpdated":"2025-04-15T15:34:33+0000","progress":0,"config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=120"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=120"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=120"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=120"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=121"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=121"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=121"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=121"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=122"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=122"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=122"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=122"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744731141311_2060664347","id":"paragraph_1744731141311_2060664347","dateCreated":"2025-04-15T15:32:21+0000","dateStarted":"2025-04-15T15:34:33+0000","dateFinished":"2025-04-15T15:34:37+0000","status":"FINISHED"},{"title":"Agrupamentos e Agregações","text":"%pyspark\n# Contar vendas por país\nsales_by_country = sales_df.groupBy(\"Country\").count()\nsales_by_country.show()\n\n# Soma do valor de vendas por produto\nrevenue_by_product = sales_df.groupBy(\"Product\") \\\n    .agg(sum(\"Amount\").alias(\"Total_Revenue\"))\nrevenue_by_product.show(truncate=False)","user":"anonymous","dateUpdated":"2025-04-15T15:37:28+0000","progress":0,"config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=123"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=123"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=123"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=123"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=124"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=124"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=124"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=124"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=125"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=125"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=125"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=125"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=126"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=126"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=126"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=126"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744731224635_1918117576","id":"paragraph_1744731224635_1918117576","dateCreated":"2025-04-15T15:33:44+0000","dateStarted":"2025-04-15T15:37:28+0000","dateFinished":"2025-04-15T15:37:33+0000","status":"FINISHED"},{"text":"%pyspark\n# Vendas por país e produto\nsales_by_country_product = sales_df.groupBy(\"Country\", \"Product\") \\\n    .agg(sum(\"Amount\").alias(\"Total_Revenue\")) \\\n    .orderBy(\"Country\", col(\"Total_Revenue\").desc())\nsales_by_country_product.show(truncate=False)","user":"anonymous","dateUpdated":"2025-04-15T15:37:54+0000","progress":0,"config":{"colWidth":12,"fontSize":9,"results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true}},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=127"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=127"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=127"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=127"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=128"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=128"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=128"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=128"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744731221574_442676000","id":"paragraph_1744731221574_442676000","dateCreated":"2025-04-15T15:33:41+0000","dateStarted":"2025-04-15T15:37:54+0000","dateFinished":"2025-04-15T15:37:58+0000","status":"FINISHED"},{"title":"Agregações com Filtros (having)","text":"%pyspark\n# Filtrar grupos após agregação (equivalente ao HAVING do SQL)\nhigh_revenue_products = sales_df.groupBy(\"Product\") \\\n    .agg(sum(\"Amount\").alias(\"Total_Revenue\")) \\\n    .filter(col(\"Total_Revenue\") > 50000) \\\n    .orderBy(col(\"Total_Revenue\").desc())\nhigh_revenue_products.show()\n\n# Vendedores com média de venda acima de $3,000\ntop_sellers = sales_df.groupBy(\"Sales_Person\") \\\n    .agg(\n        avg(\"Amount\").alias(\"Avg_Sale_Amount\"),\n        count(\"*\").alias(\"Sales_Count\")\n    ) \\\n    .filter(col(\"Avg_Sale_Amount\") > 3000) \\\n    .orderBy(col(\"Avg_Sale_Amount\").desc())\ntop_sellers.show()","user":"anonymous","dateUpdated":"2025-04-15T15:38:40+0000","progress":0,"config":{"colWidth":12,"fontSize":9,"title":true,"results":{},"enabled":true,"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true}},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{"jobUrl":{"propertyName":"jobUrl","label":"SPARK JOB","tooltip":"View in Spark web UI","group":"spark","values":[{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=129"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=129"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=129"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=129"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=130"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=130"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=130"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=130"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=131"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=131"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=131"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=131"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=132"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=132"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=132"},{"jobUrl":"http://9382a0befda4:4040/jobs/job?id=132"}],"interpreterSettingId":"spark"}},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744731474399_1311280438","id":"paragraph_1744731474399_1311280438","dateCreated":"2025-04-15T15:37:54+0000","dateStarted":"2025-04-15T15:38:40+0000","dateFinished":"2025-04-15T15:38:45+0000","status":"FINISHED"},{"text":"%md\n| Função             | Exemplo PySpark                     | Descrição                                       |\n|--------------------|-------------------------------------|-------------------------------------------------|\n| `count()`          | `df.groupBy(\"País\").count()`        | Conta o número de registros                     |\n| `sum()`            | `df.groupBy(\"Produto\").sum(\"Valor\")`| Soma dos valores em uma coluna                  |\n| `avg()` ou `mean()`| `df.groupBy(\"País\").avg(\"Valor\")`   | Média dos valores                              |\n| `min()`            | `df.groupBy(\"Ano\").min(\"Valor\")`    | Valor mínimo                                    |\n| `max()`            | `df.groupBy(\"Ano\").max(\"Valor\")`    | Valor máximo                                    |\n| `first()`          | `df.groupBy(\"País\").agg(first(\"Valor\"))` | Primeiro valor encontrado                  |\n| `last()`           | `df.groupBy(\"País\").agg(last(\"Valor\"))`  | Último valor encontrado                     |\n","user":"anonymous","dateUpdated":"2025-04-15T16:20:22+0000","progress":0,"config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744731520981_1908989600","id":"paragraph_1744731520981_1908989600","dateCreated":"2025-04-15T15:38:40+0000","dateStarted":"2025-04-15T16:20:22+0000","dateFinished":"2025-04-15T16:20:22+0000","status":"FINISHED","focus":true,"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<table>\n<thead>\n<tr><th>Função</th><th>Exemplo PySpark</th><th>Descrição</th></tr>\n</thead>\n<tbody>\n<tr><td><code>count()</code></td><td><code>df.groupBy(&quot;País&quot;).count()</code></td><td>Conta o número de registros</td></tr>\n<tr><td><code>sum()</code></td><td><code>df.groupBy(&quot;Produto&quot;).sum(&quot;Valor&quot;)</code></td><td>Soma dos valores em uma coluna</td></tr>\n<tr><td><code>avg()</code> ou <code>mean()</code></td><td><code>df.groupBy(&quot;País&quot;).avg(&quot;Valor&quot;)</code></td><td>Média dos valores</td></tr>\n<tr><td><code>min()</code></td><td><code>df.groupBy(&quot;Ano&quot;).min(&quot;Valor&quot;)</code></td><td>Valor mínimo</td></tr>\n<tr><td><code>max()</code></td><td><code>df.groupBy(&quot;Ano&quot;).max(&quot;Valor&quot;)</code></td><td>Valor máximo</td></tr>\n<tr><td><code>first()</code></td><td><code>df.groupBy(&quot;País&quot;).agg(first(&quot;Valor&quot;))</code></td><td>Primeiro valor encontrado</td></tr>\n<tr><td><code>last()</code></td><td><code>df.groupBy(&quot;País&quot;).agg(last(&quot;Valor&quot;))</code></td><td>Último valor encontrado</td></tr>\n</tbody>\n</table>\n\n</div>"}]}},{"text":"%md\n","user":"anonymous","dateUpdated":"2025-04-15T15:44:16+0000","progress":0,"config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false}},"settings":{"params":{},"forms":{}},"apps":[],"runtimeInfos":{},"progressUpdateIntervalMs":500,"jobName":"paragraph_1744731856824_631280859","id":"paragraph_1744731856824_631280859","dateCreated":"2025-04-15T15:44:16+0000","status":"READY"}],"name":"04 -  PySpark com Spark DataFrame API ","id":"2KSCQYGJA","defaultInterpreterGroup":"spark","version":"0.12.0","noteParams":{},"noteForms":{},"angularObjects":{},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{},"path":"/04 -  PySpark com Spark DataFrame API "}